# Generated by Django 5.2.4 on 2025-07-08 02:35

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DataSync',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sync_type', models.CharField(max_length=50, verbose_name='Тип синхронизации')),
                ('status', models.CharField(choices=[('pending', 'Ожидает'), ('running', 'Выполняется'), ('completed', 'Завершено'), ('failed', 'Ошибка')], default='pending', max_length=20, verbose_name='Статус')),
                ('started_at', models.DateTimeField(blank=True, null=True, verbose_name='Время начала')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Время завершения')),
                ('error_message', models.TextField(blank=True, verbose_name='Сообщение об ошибке')),
                ('records_processed', models.IntegerField(default=0, verbose_name='Обработано записей')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'Синхронизация данных',
                'verbose_name_plural': 'Синхронизации данных',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CacheEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=255, unique=True, verbose_name='Ключ')),
                ('value', models.TextField(verbose_name='Значение')),
                ('expires_at', models.DateTimeField(blank=True, null=True, verbose_name='Истекает в')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Кэш запись',
                'verbose_name_plural': 'Кэш записи',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='HealthCheck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(max_length=100, verbose_name='Название сервиса')),
                ('status', models.CharField(choices=[('healthy', 'Здоров'), ('warning', 'Предупреждение'), ('critical', 'Критично'), ('down', 'Недоступен')], max_length=20, verbose_name='Статус')),
                ('response_time', models.FloatField(blank=True, null=True, verbose_name='Время отклика (мс)')),
                ('last_check', models.DateTimeField(auto_now=True, verbose_name='Последняя проверка')),
                ('details', models.JSONField(blank=True, default=dict, verbose_name='Детали')),
            ],
            options={
                'verbose_name': 'Проверка здоровья',
                'verbose_name_plural': 'Проверки здоровья',
                'ordering': ['service_name'],
            },
        ),
        migrations.CreateModel(
            name='IntegrationConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название')),
                ('config_type', models.CharField(max_length=50, verbose_name='Тип конфигурации')),
                ('config_data', models.JSONField(verbose_name='Данные конфигурации')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Конфигурация интеграции',
                'verbose_name_plural': 'Конфигурации интеграций',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SystemMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('metric_type', models.CharField(choices=[('counter', 'Счетчик'), ('gauge', 'Измеритель'), ('histogram', 'Гистограмма'), ('summary', 'Сводка')], max_length=20, verbose_name='Тип метрики')),
                ('value', models.FloatField(verbose_name='Значение')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Временная метка')),
                ('labels', models.JSONField(blank=True, default=dict, verbose_name='Метки')),
            ],
            options={
                'verbose_name': 'Системная метрика',
                'verbose_name_plural': 'Системные метрики',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='IntegrationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('component', models.CharField(max_length=100, verbose_name='Компонент')),
                ('action', models.CharField(max_length=100, verbose_name='Действие')),
                ('status', models.CharField(choices=[('success', 'Успех'), ('warning', 'Предупреждение'), ('error', 'Ошибка'), ('info', 'Информация')], max_length=20, verbose_name='Статус')),
                ('message', models.TextField(verbose_name='Сообщение')),
                ('details', models.JSONField(blank=True, default=dict, verbose_name='Детали')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='integration_logs', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Лог интеграции',
                'verbose_name_plural': 'Логи интеграций',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SystemAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_type', models.CharField(max_length=100, verbose_name='Тип алерта')),
                ('severity', models.CharField(choices=[('low', 'Низкая'), ('medium', 'Средняя'), ('high', 'Высокая'), ('critical', 'Критическая')], max_length=20, verbose_name='Важность')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('message', models.TextField(verbose_name='Сообщение')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('is_acknowledged', models.BooleanField(default=False, verbose_name='Подтвержден')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата подтверждения')),
                ('acknowledged_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='acknowledged_alerts', to=settings.AUTH_USER_MODEL, verbose_name='Подтвердил')),
            ],
            options={
                'verbose_name': 'Системный алерт',
                'verbose_name_plural': 'Системные алерты',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SystemEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(max_length=100, verbose_name='Тип события')),
                ('severity', models.CharField(choices=[('info', 'Информация'), ('warning', 'Предупреждение'), ('error', 'Ошибка'), ('critical', 'Критично')], max_length=20, verbose_name='Важность')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('message', models.TextField(verbose_name='Сообщение')),
                ('data', models.JSONField(blank=True, default=dict, verbose_name='Данные')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Временная метка')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='system_events', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Системное событие',
                'verbose_name_plural': 'Системные события',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AddIndex(
            model_name='systemmetric',
            index=models.Index(fields=['metric_type', 'timestamp'], name='system_metr_metric__ef2754_idx'),
        ),
        migrations.AddIndex(
            model_name='systemmetric',
            index=models.Index(fields=['name', 'timestamp'], name='system_metr_name_0eaba0_idx'),
        ),
        migrations.AddIndex(
            model_name='integrationlog',
            index=models.Index(fields=['component', 'action'], name='integration_compone_a8301a_idx'),
        ),
        migrations.AddIndex(
            model_name='integrationlog',
            index=models.Index(fields=['status', 'created_at'], name='integration_status_6fd0b4_idx'),
        ),
        migrations.AddIndex(
            model_name='integrationlog',
            index=models.Index(fields=['user', 'created_at'], name='integration_user_id_217cd9_idx'),
        ),
        migrations.AddIndex(
            model_name='systemalert',
            index=models.Index(fields=['alert_type', 'severity'], name='system_aler_alert_t_a5ca65_idx'),
        ),
        migrations.AddIndex(
            model_name='systemalert',
            index=models.Index(fields=['is_active', 'is_acknowledged'], name='system_aler_is_acti_99bca2_idx'),
        ),
        migrations.AddIndex(
            model_name='systemevent',
            index=models.Index(fields=['event_type', 'timestamp'], name='system_even_event_t_beb9ee_idx'),
        ),
        migrations.AddIndex(
            model_name='systemevent',
            index=models.Index(fields=['user', 'timestamp'], name='system_even_user_id_b0b998_idx'),
        ),
        migrations.AddIndex(
            model_name='systemevent',
            index=models.Index(fields=['severity', 'timestamp'], name='system_even_severit_b4034b_idx'),
        ),
    ] 