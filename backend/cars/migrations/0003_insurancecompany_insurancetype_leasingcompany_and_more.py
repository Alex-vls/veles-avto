# Generated by Django 5.2.4 on 2025-07-07 20:53

import cars.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('cars', '0002_brand_alter_car_options_alter_carimage_options_and_more'),
        ('companies', '0003_alter_company_options_alter_companyfeature_options_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='InsuranceCompany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название')),
                ('description', models.TextField(verbose_name='Описание')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='insurance_companies/', verbose_name='Логотип')),
                ('website', models.URLField(blank=True, verbose_name='Веб-сайт')),
                ('phone', models.CharField(max_length=20, verbose_name='Телефон')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('address', models.TextField(verbose_name='Адрес')),
                ('license_number', models.CharField(max_length=50, verbose_name='Номер лицензии')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'Страховая компания',
                'verbose_name_plural': 'Страховые компании',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='InsuranceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('description', models.TextField(verbose_name='Описание')),
                ('is_mandatory', models.BooleanField(default=False, verbose_name='Обязательное')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'Тип страхования',
                'verbose_name_plural': 'Типы страхования',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='LeasingCompany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название')),
                ('description', models.TextField(verbose_name='Описание')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='leasing_companies/', verbose_name='Логотип')),
                ('website', models.URLField(blank=True, verbose_name='Веб-сайт')),
                ('phone', models.CharField(max_length=20, verbose_name='Телефон')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('address', models.TextField(verbose_name='Адрес')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'Лизинговая компания',
                'verbose_name_plural': 'Лизинговые компании',
                'ordering': ['name'],
            },
        ),
        migrations.AlterModelOptions(
            name='brand',
            options={'ordering': ['name'], 'verbose_name': 'Марка', 'verbose_name_plural': 'Марки'},
        ),
        migrations.AlterModelOptions(
            name='car',
            options={'verbose_name': 'Автомобиль', 'verbose_name_plural': 'Автомобили'},
        ),
        migrations.AlterModelOptions(
            name='carfeature',
            options={'ordering': ['name'], 'verbose_name': 'Характеристика автомобиля', 'verbose_name_plural': 'Характеристики автомобилей'},
        ),
        migrations.AlterModelOptions(
            name='carimage',
            options={'ordering': ['-is_main', '-created_at'], 'verbose_name': 'Изображение автомобиля', 'verbose_name_plural': 'Изображения автомобилей'},
        ),
        migrations.AlterModelOptions(
            name='model',
            options={'ordering': ['brand', 'name'], 'verbose_name': 'Модель', 'verbose_name_plural': 'Модели'},
        ),
        migrations.RemoveField(
            model_name='car',
            name='color',
        ),
        migrations.RemoveField(
            model_name='car',
            name='company',
        ),
        migrations.RemoveField(
            model_name='car',
            name='created_at',
        ),
        migrations.RemoveField(
            model_name='car',
            name='currency',
        ),
        migrations.RemoveField(
            model_name='car',
            name='description',
        ),
        migrations.RemoveField(
            model_name='car',
            name='engine_volume',
        ),
        migrations.RemoveField(
            model_name='car',
            name='fuel_type',
        ),
        migrations.RemoveField(
            model_name='car',
            name='is_active',
        ),
        migrations.RemoveField(
            model_name='car',
            name='mileage',
        ),
        migrations.RemoveField(
            model_name='car',
            name='model',
        ),
        migrations.RemoveField(
            model_name='car',
            name='power',
        ),
        migrations.RemoveField(
            model_name='car',
            name='price',
        ),
        migrations.RemoveField(
            model_name='car',
            name='transmission',
        ),
        migrations.RemoveField(
            model_name='car',
            name='updated_at',
        ),
        migrations.RemoveField(
            model_name='car',
            name='vin',
        ),
        migrations.RemoveField(
            model_name='car',
            name='year',
        ),
        migrations.AddField(
            model_name='car',
            name='doors',
            field=models.PositiveIntegerField(default=4, verbose_name='Количество дверей'),
        ),
        migrations.AddField(
            model_name='car',
            name='seats',
            field=models.PositiveIntegerField(default=5, verbose_name='Количество мест'),
        ),
        migrations.AddField(
            model_name='car',
            name='trunk_volume',
            field=models.PositiveIntegerField(default=400, verbose_name='Объем багажника (л)'),
        ),
        migrations.AlterField(
            model_name='brand',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Дата создания'),
        ),
        migrations.AlterField(
            model_name='brand',
            name='description',
            field=models.TextField(blank=True, verbose_name='Описание'),
        ),
        migrations.AlterField(
            model_name='brand',
            name='logo',
            field=models.ImageField(blank=True, null=True, upload_to='brands/', verbose_name='Логотип'),
        ),
        migrations.AlterField(
            model_name='brand',
            name='name',
            field=models.CharField(max_length=100, unique=True, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='brand',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='Дата обновления'),
        ),
        migrations.AlterField(
            model_name='car',
            name='body_type',
            field=models.CharField(choices=[('sedan', 'Седан'), ('hatchback', 'Хэтчбек'), ('wagon', 'Универсал'), ('suv', 'Внедорожник'), ('crossover', 'Кроссовер'), ('coupe', 'Купе'), ('convertible', 'Кабриолет'), ('pickup', 'Пикап'), ('van', 'Минивэн')], default='sedan', max_length=20, verbose_name='Тип кузова'),
        ),
        migrations.AlterField(
            model_name='carfeature',
            name='car',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='features', to='cars.car', verbose_name='Автомобиль'),
        ),
        migrations.AlterField(
            model_name='carfeature',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Дата создания'),
        ),
        migrations.AlterField(
            model_name='carfeature',
            name='name',
            field=models.CharField(max_length=100, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='carfeature',
            name='value',
            field=models.CharField(max_length=100, verbose_name='Значение'),
        ),
        migrations.AlterField(
            model_name='carimage',
            name='car',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='cars.car', verbose_name='Автомобиль'),
        ),
        migrations.AlterField(
            model_name='carimage',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Дата создания'),
        ),
        migrations.AlterField(
            model_name='carimage',
            name='image',
            field=models.ImageField(upload_to='cars/images/', verbose_name='Изображение'),
        ),
        migrations.AlterField(
            model_name='carimage',
            name='is_main',
            field=models.BooleanField(default=False, verbose_name='Главное изображение'),
        ),
        migrations.AlterField(
            model_name='model',
            name='brand',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='models', to='cars.brand', verbose_name='Марка'),
        ),
        migrations.AlterField(
            model_name='model',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Дата создания'),
        ),
        migrations.AlterField(
            model_name='model',
            name='description',
            field=models.TextField(blank=True, verbose_name='Описание'),
        ),
        migrations.AlterField(
            model_name='model',
            name='name',
            field=models.CharField(max_length=100, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='model',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='Дата обновления'),
        ),
        migrations.CreateModel(
            name='InsurancePolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('policy_number', models.CharField(max_length=50, unique=True, verbose_name='Номер полиса')),
                ('status', models.CharField(choices=[('draft', 'Черновик'), ('active', 'Активен'), ('expired', 'Истек'), ('cancelled', 'Отменен')], default='draft', max_length=20, verbose_name='Статус')),
                ('start_date', models.DateField(verbose_name='Дата начала')),
                ('end_date', models.DateField(verbose_name='Дата окончания')),
                ('premium_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Сумма премии')),
                ('coverage_amount', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Сумма покрытия')),
                ('deductible', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Франшиза')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='policies', to='cars.insurancecompany', verbose_name='Компания')),
                ('insured_person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='insurance_policies', to=settings.AUTH_USER_MODEL, verbose_name='Страхователь')),
                ('insurance_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='policies', to='cars.insurancetype', verbose_name='Тип страхования')),
            ],
            options={
                'verbose_name': 'Страховой полис',
                'verbose_name_plural': 'Страховые полисы',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='InsuranceClaim',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('claim_number', models.CharField(max_length=50, unique=True, verbose_name='Номер случая')),
                ('status', models.CharField(choices=[('filed', 'Подано'), ('under_review', 'На рассмотрении'), ('approved', 'Одобрено'), ('rejected', 'Отклонено'), ('paid', 'Выплачено')], default='filed', max_length=20, verbose_name='Статус')),
                ('incident_date', models.DateTimeField(verbose_name='Дата происшествия')),
                ('description', models.TextField(verbose_name='Описание происшествия')),
                ('damage_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Сумма ущерба')),
                ('claim_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Сумма к выплате')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('filed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='filed_claims', to=settings.AUTH_USER_MODEL, verbose_name='Заявитель')),
                ('policy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='claims', to='cars.insurancepolicy', verbose_name='Полис')),
            ],
            options={
                'verbose_name': 'Страховой случай',
                'verbose_name_plural': 'Страховые случаи',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LeasingProgram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название программы')),
                ('description', models.TextField(verbose_name='Описание')),
                ('min_down_payment', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Минимальный первоначальный взнос (%)')),
                ('max_term', models.PositiveIntegerField(default=60, verbose_name='Максимальный срок (мес)')),
                ('interest_rate', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Процентная ставка (%)')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='programs', to='cars.leasingcompany', verbose_name='Компания')),
            ],
            options={
                'verbose_name': 'Лизинговая программа',
                'verbose_name_plural': 'Лизинговые программы',
                'ordering': ['company', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicle_type', models.CharField(choices=[('car', 'Автомобиль'), ('motorcycle', 'Мотоцикл'), ('truck', 'Грузовик'), ('bus', 'Автобус'), ('boat', 'Лодка'), ('yacht', 'Яхта'), ('helicopter', 'Вертолет'), ('airplane', 'Самолет'), ('tractor', 'Трактор'), ('special', 'Спецтехника')], default='car', max_length=20, verbose_name='Тип транспорта')),
                ('year', models.PositiveIntegerField(default=2000, verbose_name='Год выпуска')),
                ('mileage', models.PositiveIntegerField(default=0, verbose_name='Пробег')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Цена')),
                ('currency', models.CharField(default='RUB', max_length=3, verbose_name='Валюта')),
                ('fuel_type', models.CharField(choices=[('petrol', 'Бензин'), ('diesel', 'Дизель'), ('electric', 'Электро'), ('hybrid', 'Гибрид'), ('gas', 'Газ'), ('kerosene', 'Керосин'), ('aviation_fuel', 'Авиационное топливо')], default='petrol', max_length=20, verbose_name='Тип топлива')),
                ('transmission', models.CharField(choices=[('manual', 'Механика'), ('automatic', 'Автомат'), ('robot', 'Робот'), ('variator', 'Вариатор'), ('cvt', 'Бесступенчатая')], default='manual', max_length=20, verbose_name='Трансмиссия')),
                ('engine_volume', models.DecimalField(decimal_places=2, default=1.0, max_digits=5, verbose_name='Объем двигателя')),
                ('power', models.PositiveIntegerField(default=100, verbose_name='Мощность')),
                ('color', models.CharField(default='white', max_length=50, verbose_name='Цвет')),
                ('vin', models.CharField(blank=True, max_length=50, null=True, unique=True, validators=[cars.models.validate_vin], verbose_name='VIN/Серийный номер')),
                ('description', models.TextField(default='Без описания', verbose_name='Описание')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('is_available', models.BooleanField(default=True, verbose_name='Доступен')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicles', to='cars.brand', verbose_name='Марка')),
                ('company', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vehicles', to='companies.company', verbose_name='Компания')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicles', to='cars.model', verbose_name='Модель')),
            ],
            options={
                'verbose_name': 'Транспорт',
                'verbose_name_plural': 'Транспорт',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Motorcycle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('engine_type', models.CharField(choices=[('inline', 'Рядный'), ('v_twin', 'V-образный'), ('boxer', 'Оппозитный'), ('single', 'Одноцилиндровый')], default='inline', max_length=20, verbose_name='Тип двигателя')),
                ('cylinders', models.PositiveIntegerField(default=2, verbose_name='Количество цилиндров')),
                ('cooling', models.CharField(choices=[('air', 'Воздушное'), ('liquid', 'Жидкостное'), ('oil', 'Масляное')], default='air', max_length=20, verbose_name='Охлаждение')),
                ('fuel_capacity', models.PositiveIntegerField(default=15, verbose_name='Объем топливного бака (л)')),
                ('vehicle', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='motorcycle_details', to='cars.vehicle', verbose_name='Транспорт')),
            ],
            options={
                'verbose_name': 'Мотоцикл',
                'verbose_name_plural': 'Мотоциклы',
            },
        ),
        migrations.CreateModel(
            name='LeasingApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('draft', 'Черновик'), ('submitted', 'Подана'), ('under_review', 'На рассмотрении'), ('approved', 'Одобрена'), ('rejected', 'Отклонена'), ('cancelled', 'Отменена')], default='draft', max_length=20, verbose_name='Статус')),
                ('down_payment', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Первоначальный взнос')),
                ('term_months', models.PositiveIntegerField(default=36, verbose_name='Срок лизинга (мес)')),
                ('monthly_payment', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Ежемесячный платеж')),
                ('total_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Общая сумма')),
                ('notes', models.TextField(blank=True, verbose_name='Примечания')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leasing_applications', to=settings.AUTH_USER_MODEL, verbose_name='Заявитель')),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='cars.leasingprogram', verbose_name='Программа')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leasing_applications', to='cars.vehicle', verbose_name='Транспорт')),
            ],
            options={
                'verbose_name': 'Заявка на лизинг',
                'verbose_name_plural': 'Заявки на лизинг',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='insurancepolicy',
            name='vehicle',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='insurance_policies', to='cars.vehicle', verbose_name='Транспорт'),
        ),
        migrations.CreateModel(
            name='Boat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('boat_type', models.CharField(choices=[('motorboat', 'Моторная лодка'), ('sailboat', 'Парусная лодка'), ('yacht', 'Яхта'), ('catamaran', 'Катамаран'), ('jet_ski', 'Гидроцикл')], default='motorboat', max_length=20, verbose_name='Тип судна')),
                ('length', models.DecimalField(decimal_places=2, default=5.0, max_digits=5, verbose_name='Длина (м)')),
                ('beam', models.DecimalField(decimal_places=2, default=2.0, max_digits=4, verbose_name='Ширина (м)')),
                ('draft', models.DecimalField(decimal_places=2, default=0.5, max_digits=3, verbose_name='Осадка (м)')),
                ('capacity', models.PositiveIntegerField(default=4, verbose_name='Вместимость (чел)')),
                ('vehicle', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='boat_details', to='cars.vehicle', verbose_name='Транспорт')),
            ],
            options={
                'verbose_name': 'Судно',
                'verbose_name_plural': 'Судна',
            },
        ),
        migrations.CreateModel(
            name='Auction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Название')),
                ('description', models.TextField(verbose_name='Описание')),
                ('auction_type', models.CharField(choices=[('english', 'Английский'), ('dutch', 'Голландский'), ('sealed', 'Закрытый'), ('reverse', 'Обратный')], default='english', max_length=20, verbose_name='Тип аукциона')),
                ('status', models.CharField(choices=[('draft', 'Черновик'), ('scheduled', 'Запланирован'), ('active', 'Активен'), ('paused', 'Приостановлен'), ('ended', 'Завершен'), ('cancelled', 'Отменен')], default='draft', max_length=20, verbose_name='Статус')),
                ('start_date', models.DateTimeField(verbose_name='Дата начала')),
                ('end_date', models.DateTimeField(verbose_name='Дата окончания')),
                ('min_bid', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Минимальная ставка')),
                ('reserve_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Резервная цена')),
                ('current_price', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Текущая цена')),
                ('bid_increment', models.DecimalField(decimal_places=2, default=1000, max_digits=10, verbose_name='Шаг ставки')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_auctions', to=settings.AUTH_USER_MODEL, verbose_name='Создатель')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='auctions', to='cars.vehicle', verbose_name='Транспорт')),
            ],
            options={
                'verbose_name': 'Аукцион',
                'verbose_name_plural': 'Аукционы',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Aircraft',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aircraft_type', models.CharField(choices=[('helicopter', 'Вертолет'), ('airplane', 'Самолет'), ('gyrocopter', 'Автожир'), ('drone', 'Дрон')], default='helicopter', max_length=20, verbose_name='Тип воздушного судна')),
                ('wingspan', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Размах крыльев (м)')),
                ('length', models.DecimalField(decimal_places=2, default=5.0, max_digits=5, verbose_name='Длина (м)')),
                ('max_altitude', models.PositiveIntegerField(default=1000, verbose_name='Максимальная высота (м)')),
                ('range', models.PositiveIntegerField(default=100, verbose_name='Дальность полета (км)')),
                ('flight_hours', models.PositiveIntegerField(default=0, verbose_name='Налет часов')),
                ('vehicle', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='aircraft_details', to='cars.vehicle', verbose_name='Транспорт')),
            ],
            options={
                'verbose_name': 'Воздушное судно',
                'verbose_name_plural': 'Воздушные суда',
            },
        ),
        migrations.AddField(
            model_name='car',
            name='vehicle',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='car_details', to='cars.vehicle', verbose_name='Транспорт'),
        ),
        migrations.CreateModel(
            name='VehicleFeature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('value', models.CharField(max_length=100, verbose_name='Значение')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='features', to='cars.vehicle', verbose_name='Транспорт')),
            ],
            options={
                'verbose_name': 'Характеристика транспорта',
                'verbose_name_plural': 'Характеристики транспорта',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='VehicleImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='vehicles/', verbose_name='Изображение')),
                ('is_main', models.BooleanField(default=False, verbose_name='Главное изображение')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='cars.vehicle', verbose_name='Транспорт')),
            ],
            options={
                'verbose_name': 'Изображение транспорта',
                'verbose_name_plural': 'Изображения транспорта',
                'ordering': ['-is_main', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AuctionBid',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Сумма ставки')),
                ('is_winning', models.BooleanField(default=False, verbose_name='Победная ставка')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата ставки')),
                ('auction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bids', to='cars.auction', verbose_name='Аукцион')),
                ('bidder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='auction_bids', to=settings.AUTH_USER_MODEL, verbose_name='Ставщик')),
            ],
            options={
                'verbose_name': 'Ставка',
                'verbose_name_plural': 'Ставки',
                'ordering': ['-amount', 'created_at'],
                'indexes': [models.Index(fields=['auction'], name='cars_auctio_auction_21cac6_idx'), models.Index(fields=['bidder'], name='cars_auctio_bidder__b86bea_idx'), models.Index(fields=['amount'], name='cars_auctio_amount_a7d3e1_idx'), models.Index(fields=['created_at'], name='cars_auctio_created_f0ed5f_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='vehicle',
            index=models.Index(fields=['vehicle_type'], name='cars_vehicl_vehicle_8fb545_idx'),
        ),
        migrations.AddIndex(
            model_name='vehicle',
            index=models.Index(fields=['vin'], name='cars_vehicl_vin_6969aa_idx'),
        ),
        migrations.AddIndex(
            model_name='vehicle',
            index=models.Index(fields=['year'], name='cars_vehicl_year_ab07b0_idx'),
        ),
        migrations.AddIndex(
            model_name='vehicle',
            index=models.Index(fields=['price'], name='cars_vehicl_price_c96569_idx'),
        ),
        migrations.AddIndex(
            model_name='vehicle',
            index=models.Index(fields=['is_active'], name='cars_vehicl_is_acti_2a1ae4_idx'),
        ),
        migrations.AddIndex(
            model_name='vehicle',
            index=models.Index(fields=['is_available'], name='cars_vehicl_is_avai_5be9b0_idx'),
        ),
        migrations.AddIndex(
            model_name='vehicle',
            index=models.Index(fields=['company'], name='cars_vehicl_company_e0554d_idx'),
        ),
        migrations.AddIndex(
            model_name='vehicle',
            index=models.Index(fields=['brand'], name='cars_vehicl_brand_i_7d37c8_idx'),
        ),
        migrations.AddIndex(
            model_name='vehicle',
            index=models.Index(fields=['model'], name='cars_vehicl_model_i_8501ee_idx'),
        ),
        migrations.AddIndex(
            model_name='leasingapplication',
            index=models.Index(fields=['status'], name='cars_leasin_status_624a24_idx'),
        ),
        migrations.AddIndex(
            model_name='leasingapplication',
            index=models.Index(fields=['applicant'], name='cars_leasin_applica_74613c_idx'),
        ),
        migrations.AddIndex(
            model_name='leasingapplication',
            index=models.Index(fields=['vehicle'], name='cars_leasin_vehicle_e9dae5_idx'),
        ),
        migrations.AddIndex(
            model_name='leasingapplication',
            index=models.Index(fields=['program'], name='cars_leasin_program_0922ba_idx'),
        ),
        migrations.AddIndex(
            model_name='leasingapplication',
            index=models.Index(fields=['status', 'created_at'], name='cars_leasin_status_cd8977_idx'),
        ),
        migrations.AddIndex(
            model_name='insurancepolicy',
            index=models.Index(fields=['status'], name='cars_insura_status_3840e6_idx'),
        ),
        migrations.AddIndex(
            model_name='insurancepolicy',
            index=models.Index(fields=['policy_number'], name='cars_insura_policy__429ab5_idx'),
        ),
        migrations.AddIndex(
            model_name='insurancepolicy',
            index=models.Index(fields=['insured_person'], name='cars_insura_insured_f9f2bf_idx'),
        ),
        migrations.AddIndex(
            model_name='insurancepolicy',
            index=models.Index(fields=['vehicle'], name='cars_insura_vehicle_6ff179_idx'),
        ),
        migrations.AddIndex(
            model_name='insurancepolicy',
            index=models.Index(fields=['company'], name='cars_insura_company_1361ad_idx'),
        ),
        migrations.AddIndex(
            model_name='insurancepolicy',
            index=models.Index(fields=['start_date'], name='cars_insura_start_d_63866d_idx'),
        ),
        migrations.AddIndex(
            model_name='insurancepolicy',
            index=models.Index(fields=['end_date'], name='cars_insura_end_dat_05dcaf_idx'),
        ),
        migrations.AddIndex(
            model_name='insurancepolicy',
            index=models.Index(fields=['status', 'end_date'], name='cars_insura_status_536b34_idx'),
        ),
        migrations.AddIndex(
            model_name='auction',
            index=models.Index(fields=['status'], name='cars_auctio_status_0feee4_idx'),
        ),
        migrations.AddIndex(
            model_name='auction',
            index=models.Index(fields=['auction_type'], name='cars_auctio_auction_7bbb6e_idx'),
        ),
        migrations.AddIndex(
            model_name='auction',
            index=models.Index(fields=['start_date'], name='cars_auctio_start_d_a131b7_idx'),
        ),
        migrations.AddIndex(
            model_name='auction',
            index=models.Index(fields=['end_date'], name='cars_auctio_end_dat_5e95f9_idx'),
        ),
        migrations.AddIndex(
            model_name='auction',
            index=models.Index(fields=['created_by'], name='cars_auctio_created_c8979c_idx'),
        ),
        migrations.AddIndex(
            model_name='auction',
            index=models.Index(fields=['vehicle'], name='cars_auctio_vehicle_c155f9_idx'),
        ),
        migrations.AddIndex(
            model_name='auction',
            index=models.Index(fields=['status', 'start_date'], name='cars_auctio_status_91f7d0_idx'),
        ),
        migrations.AddIndex(
            model_name='auction',
            index=models.Index(fields=['status', 'end_date'], name='cars_auctio_status_d2c982_idx'),
        ),
        migrations.AddIndex(
            model_name='vehiclefeature',
            index=models.Index(fields=['vehicle'], name='cars_vehicl_vehicle_548745_idx'),
        ),
        migrations.AddIndex(
            model_name='vehiclefeature',
            index=models.Index(fields=['name'], name='cars_vehicl_name_f2a97b_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='vehiclefeature',
            unique_together={('vehicle', 'name')},
        ),
        migrations.AddIndex(
            model_name='vehicleimage',
            index=models.Index(fields=['vehicle'], name='cars_vehicl_vehicle_cb9808_idx'),
        ),
        migrations.AddIndex(
            model_name='vehicleimage',
            index=models.Index(fields=['is_main'], name='cars_vehicl_is_main_5d0153_idx'),
        ),
    ]
