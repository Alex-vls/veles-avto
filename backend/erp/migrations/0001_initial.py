# Generated by Django 5.2.4 on 2025-07-08 02:35

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('status', models.CharField(choices=[('planning', 'Планирование'), ('active', 'Активный'), ('on_hold', 'Приостановлен'), ('completed', 'Завершен'), ('cancelled', 'Отменен')], default='planning', max_length=20, verbose_name='Статус')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Дата начала')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Дата окончания')),
                ('budget', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Бюджет')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_projects', to=settings.AUTH_USER_MODEL, verbose_name='Владелец')),
            ],
            options={
                'verbose_name': 'Проект',
                'verbose_name_plural': 'Проекты',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Board',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='boards', to='erp.project', verbose_name='Проект')),
            ],
            options={
                'verbose_name': 'Доска',
                'verbose_name_plural': 'Доски',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Column',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('order', models.IntegerField(default=0, verbose_name='Порядок')),
                ('color', models.CharField(blank=True, max_length=7, verbose_name='Цвет')),
                ('board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='columns', to='erp.board', verbose_name='Доска')),
            ],
            options={
                'verbose_name': 'Колонка',
                'verbose_name_plural': 'Колонки',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('priority', models.CharField(choices=[('low', 'Низкая'), ('medium', 'Средняя'), ('high', 'Высокая'), ('urgent', 'Срочная')], default='medium', max_length=20, verbose_name='Приоритет')),
                ('status', models.CharField(choices=[('todo', 'К выполнению'), ('in_progress', 'В работе'), ('review', 'На проверке'), ('done', 'Выполнено')], default='todo', max_length=20, verbose_name='Статус')),
                ('due_date', models.DateTimeField(blank=True, null=True, verbose_name='Срок выполнения')),
                ('estimated_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='Оценка часов')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('assignee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_tasks', to=settings.AUTH_USER_MODEL, verbose_name='Исполнитель')),
                ('column', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='erp.column', verbose_name='Колонка')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reported_tasks', to=settings.AUTH_USER_MODEL, verbose_name='Докладчик')),
            ],
            options={
                'verbose_name': 'Задача',
                'verbose_name_plural': 'Задачи',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TaskLabel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('color', models.CharField(max_length=7, verbose_name='Цвет')),
                ('board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='labels', to='erp.board', verbose_name='Доска')),
            ],
            options={
                'verbose_name': 'Метка задачи',
                'verbose_name_plural': 'Метки задач',
                'unique_together': {('board', 'name')},
            },
        ),
        migrations.CreateModel(
            name='TaskLabelAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='erp.tasklabel', verbose_name='Метка')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='label_assignments', to='erp.task', verbose_name='Задача')),
            ],
            options={
                'verbose_name': 'Назначение метки',
                'verbose_name_plural': 'Назначения меток',
                'unique_together': {('task', 'label')},
            },
        ),
        migrations.CreateModel(
            name='TaskComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='Содержание')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_comments', to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='erp.task', verbose_name='Задача')),
            ],
            options={
                'verbose_name': 'Комментарий к задаче',
                'verbose_name_plural': 'Комментарии к задачам',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TaskAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='task_attachments/', verbose_name='Файл')),
                ('filename', models.CharField(max_length=255, verbose_name='Имя файла')),
                ('file_size', models.IntegerField(verbose_name='Размер файла')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата загрузки')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='erp.task', verbose_name='Задача')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_attachments', to=settings.AUTH_USER_MODEL, verbose_name='Загрузил')),
            ],
            options={
                'verbose_name': 'Вложение к задаче',
                'verbose_name_plural': 'Вложения к задачам',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='TaskHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=100, verbose_name='Действие')),
                ('field_name', models.CharField(blank=True, max_length=100, verbose_name='Название поля')),
                ('old_value', models.TextField(blank=True, verbose_name='Старое значение')),
                ('new_value', models.TextField(blank=True, verbose_name='Новое значение')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Временная метка')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='erp.task', verbose_name='Задача')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_history_actions', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'История задачи',
                'verbose_name_plural': 'История задач',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='TimeEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(verbose_name='Описание')),
                ('hours', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='Часы')),
                ('date', models.DateField(verbose_name='Дата')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='time_entries', to='erp.task', verbose_name='Задача')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='time_entries', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Запись времени',
                'verbose_name_plural': 'Записи времени',
                'ordering': ['-date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Sprint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('start_date', models.DateField(verbose_name='Дата начала')),
                ('end_date', models.DateField(verbose_name='Дата окончания')),
                ('goal', models.TextField(blank=True, verbose_name='Цель')),
                ('status', models.CharField(choices=[('planning', 'Планирование'), ('active', 'Активный'), ('completed', 'Завершен')], default='planning', max_length=20, verbose_name='Статус')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sprints', to='erp.project', verbose_name='Проект')),
            ],
            options={
                'verbose_name': 'Спринт',
                'verbose_name_plural': 'Спринты',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='SprintTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sprint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sprint_tasks', to='erp.sprint', verbose_name='Спринт')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sprint_assignments', to='erp.task', verbose_name='Задача')),
            ],
            options={
                'verbose_name': 'Задача спринта',
                'verbose_name_plural': 'Задачи спринтов',
                'unique_together': {('sprint', 'task')},
            },
        ),
        migrations.CreateModel(
            name='ProjectMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('owner', 'Владелец'), ('admin', 'Администратор'), ('member', 'Участник'), ('viewer', 'Наблюдатель')], default='member', max_length=20, verbose_name='Роль')),
                ('joined_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата присоединения')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='erp.project', verbose_name='Проект')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_memberships', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Участник проекта',
                'verbose_name_plural': 'Участники проекта',
                'unique_together': {('project', 'user')},
            },
        ),
        migrations.CreateModel(
            name='ProjectTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('status', models.CharField(choices=[('todo', 'К выполнению'), ('in_progress', 'В работе'), ('review', 'На проверке'), ('done', 'Выполнено')], default='todo', max_length=20, verbose_name='Статус')),
                ('priority', models.CharField(choices=[('low', 'Низкая'), ('medium', 'Средняя'), ('high', 'Высокая'), ('urgent', 'Срочная')], default='medium', max_length=20, verbose_name='Приоритет')),
                ('due_date', models.DateTimeField(blank=True, null=True, verbose_name='Срок выполнения')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('assignee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_project_tasks', to=settings.AUTH_USER_MODEL, verbose_name='Исполнитель')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_project_tasks', to=settings.AUTH_USER_MODEL, verbose_name='Создатель')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_tasks', to='erp.project', verbose_name='Проект')),
                ('related_car', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cars.car', verbose_name='Связанный автомобиль')),
                ('related_customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Связанный клиент')),
            ],
            options={
                'verbose_name': 'Задача проекта',
                'verbose_name_plural': 'Задачи проекта',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProjectColumn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('order', models.IntegerField(default=0, verbose_name='Порядок')),
                ('color', models.CharField(blank=True, max_length=7, verbose_name='Цвет')),
                ('board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_columns', to='erp.board', verbose_name='Доска')),
            ],
            options={
                'verbose_name': 'Колонка проекта',
                'verbose_name_plural': 'Колонки проекта',
                'unique_together': {('board', 'name')},
            },
        ),
        migrations.CreateModel(
            name='ProjectBoard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='companies.company', verbose_name='Компания')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_boards', to=settings.AUTH_USER_MODEL, verbose_name='Создатель')),
            ],
            options={
                'verbose_name': 'Доска проекта',
                'verbose_name_plural': 'Доски проекта',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('quantity', models.IntegerField(default=0, verbose_name='Количество')),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена за единицу')),
                ('location', models.CharField(blank=True, max_length=255, verbose_name='Местоположение')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('car', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cars.car', verbose_name='Автомобиль')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_items', to='companies.company', verbose_name='Компания')),
            ],
            options={
                'verbose_name': 'Инвентарь',
                'verbose_name_plural': 'Инвентарь',
                'ordering': ['name'],
                'unique_together': {('company', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена')),
                ('duration_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='Длительность (часы)')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='companies.company', verbose_name='Компания')),
            ],
            options={
                'verbose_name': 'Услуга',
                'verbose_name_plural': 'Услуги',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ServiceOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(max_length=50, unique=True, verbose_name='Номер заказа')),
                ('status', models.CharField(choices=[('pending', 'Ожидает'), ('in_progress', 'В работе'), ('completed', 'Завершен'), ('cancelled', 'Отменен')], default='pending', max_length=20, verbose_name='Статус')),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Общая сумма')),
                ('notes', models.TextField(blank=True, verbose_name='Примечания')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_orders', to='cars.car', verbose_name='Автомобиль')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_orders', to='companies.company', verbose_name='Компания')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_orders', to=settings.AUTH_USER_MODEL, verbose_name='Клиент')),
            ],
            options={
                'verbose_name': 'Заказ на услугу',
                'verbose_name_plural': 'Заказы на услуги',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ServiceOrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=1, verbose_name='Количество')),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена за единицу')),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Общая цена')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='erp.service', verbose_name='Услуга')),
                ('service_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='erp.serviceorder', verbose_name='Заказ на услугу')),
            ],
            options={
                'verbose_name': 'Позиция заказа на услугу',
                'verbose_name_plural': 'Позиции заказов на услуги',
            },
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sale_number', models.CharField(max_length=50, unique=True, verbose_name='Номер продажи')),
                ('sale_date', models.DateTimeField(verbose_name='Дата продажи')),
                ('sale_price', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Цена продажи')),
                ('commission', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Комиссия')),
                ('notes', models.TextField(blank=True, verbose_name='Примечания')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sales', to='cars.car', verbose_name='Автомобиль')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sales', to='companies.company', verbose_name='Компания')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchases', to=settings.AUTH_USER_MODEL, verbose_name='Покупатель')),
            ],
            options={
                'verbose_name': 'Продажа',
                'verbose_name_plural': 'Продажи',
                'ordering': ['-sale_date'],
            },
        ),
        migrations.CreateModel(
            name='Financial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('income', 'Доход'), ('expense', 'Расход')], max_length=20, verbose_name='Тип транзакции')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Сумма')),
                ('description', models.TextField(verbose_name='Описание')),
                ('transaction_date', models.DateField(verbose_name='Дата транзакции')),
                ('category', models.CharField(blank=True, max_length=100, verbose_name='Категория')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='financial_transactions', to=settings.AUTH_USER_MODEL, verbose_name='Создатель')),
            ],
            options={
                'verbose_name': 'Финансовая транзакция',
                'verbose_name_plural': 'Финансовые транзакции',
                'ordering': ['-transaction_date'],
            },
        ),
        migrations.AddField(
            model_name='project',
            name='members',
            field=models.ManyToManyField(through='erp.ProjectMember', to=settings.AUTH_USER_MODEL, verbose_name='Участники'),
        ),
        migrations.AddField(
            model_name='projecttask',
            name='labels',
            field=models.ManyToManyField(blank=True, to='erp.tasklabel', verbose_name='Метки'),
        ),
        migrations.AddField(
            model_name='serviceorder',
            name='services',
            field=models.ManyToManyField(through='erp.ServiceOrderItem', to='erp.service', verbose_name='Услуги'),
        ),
        migrations.AddField(
            model_name='task',
            name='labels',
            field=models.ManyToManyField(through='erp.TaskLabelAssignment', to='erp.tasklabel', verbose_name='Метки'),
        ),
        migrations.AddField(
            model_name='projecttask',
            name='related_sale',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='erp.sale', verbose_name='Связанная продажа'),
        ),
        migrations.AddField(
            model_name='projecttask',
            name='related_service_order',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='erp.serviceorder', verbose_name='Связанный заказ на услугу'),
        ),
        migrations.AddField(
            model_name='projecttask',
            name='column',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='erp.projectcolumn', verbose_name='Колонка'),
        ),
        migrations.AlterUniqueTogether(
            name='projectcolumn',
            unique_together={('board', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='projectmember',
            unique_together={('project', 'user')},
        ),
        migrations.AlterUniqueTogether(
            name='sprinttask',
            unique_together={('sprint', 'task')},
        ),
        migrations.AlterUniqueTogether(
            name='tasklabel',
            unique_together={('board', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='tasklabelassignment',
            unique_together={('task', 'label')},
        ),
        migrations.AlterUniqueTogether(
            name='inventory',
            unique_together={('company', 'name')},
        ),
    ] 