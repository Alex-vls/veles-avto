# Generated by Django 5.2.4 on 2025-07-08 02:35

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TelegramBotSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bot_token', models.CharField(max_length=100, verbose_name='Токен бота')),
                ('webhook_url', models.URLField(blank=True, verbose_name='Webhook URL')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Настройки Telegram бота',
                'verbose_name_plural': 'Настройки Telegram ботов',
            },
        ),
        migrations.CreateModel(
            name='TelegramUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telegram_id', models.BigIntegerField(unique=True, verbose_name='Telegram ID')),
                ('username', models.CharField(blank=True, max_length=100, verbose_name='Username')),
                ('first_name', models.CharField(blank=True, max_length=100, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=100, verbose_name='Фамилия')),
                ('language_code', models.CharField(blank=True, max_length=10, verbose_name='Код языка')),
                ('is_bot', models.BooleanField(default=False, verbose_name='Бот')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='telegram_user', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Telegram пользователь',
                'verbose_name_plural': 'Telegram пользователи',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TelegramChat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chat_id', models.BigIntegerField(unique=True, verbose_name='Chat ID')),
                ('chat_type', models.CharField(choices=[('private', 'Приватный'), ('group', 'Группа'), ('supergroup', 'Супергруппа'), ('channel', 'Канал')], max_length=20, verbose_name='Тип чата')),
                ('title', models.CharField(blank=True, max_length=255, verbose_name='Название')),
                ('username', models.CharField(blank=True, max_length=100, verbose_name='Username')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Telegram чат',
                'verbose_name_plural': 'Telegram чаты',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TelegramMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_id', models.BigIntegerField(verbose_name='Message ID')),
                ('text', models.TextField(blank=True, verbose_name='Текст')),
                ('message_type', models.CharField(choices=[('text', 'Текст'), ('photo', 'Фото'), ('video', 'Видео'), ('document', 'Документ'), ('audio', 'Аудио'), ('voice', 'Голосовое'), ('sticker', 'Стикер'), ('location', 'Местоположение'), ('contact', 'Контакт')], max_length=20, verbose_name='Тип сообщения')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('chat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='telegram_bot.telegramchat', verbose_name='Чат')),
                ('from_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to='telegram_bot.telegramuser', verbose_name='От пользователя')),
            ],
            options={
                'verbose_name': 'Telegram сообщение',
                'verbose_name_plural': 'Telegram сообщения',
                'ordering': ['-created_at'],
                'unique_together': {('chat', 'message_id')},
            },
        ),
        migrations.CreateModel(
            name='TelegramNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('message', models.TextField(verbose_name='Сообщение')),
                ('notification_type', models.CharField(choices=[('info', 'Информация'), ('success', 'Успех'), ('warning', 'Предупреждение'), ('error', 'Ошибка')], default='info', max_length=20, verbose_name='Тип уведомления')),
                ('is_sent', models.BooleanField(default=False, verbose_name='Отправлено')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата отправки')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='telegram_notifications', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Telegram уведомление',
                'verbose_name_plural': 'Telegram уведомления',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TelegramUserState',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(max_length=100, verbose_name='Состояние')),
                ('data', models.JSONField(blank=True, default=dict, verbose_name='Данные')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='telegram_states', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Состояние Telegram пользователя',
                'verbose_name_plural': 'Состояния Telegram пользователей',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='TelegramCommand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('command', models.CharField(max_length=100, unique=True, verbose_name='Команда')),
                ('description', models.TextField(verbose_name='Описание')),
                ('handler_function', models.CharField(max_length=100, verbose_name='Функция обработчик')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Telegram команда',
                'verbose_name_plural': 'Telegram команды',
                'ordering': ['command'],
            },
        ),
        migrations.CreateModel(
            name='TelegramInlineKeyboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название')),
                ('keyboard_data', models.JSONField(verbose_name='Данные клавиатуры')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Inline клавиатура',
                'verbose_name_plural': 'Inline клавиатуры',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TelegramMiniAppSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(max_length=100, unique=True, verbose_name='ID сессии')),
                ('app_name', models.CharField(max_length=100, verbose_name='Название приложения')),
                ('data', models.JSONField(blank=True, default=dict, verbose_name='Данные сессии')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='telegram_mini_app_sessions', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Сессия Telegram Mini App',
                'verbose_name_plural': 'Сессии Telegram Mini App',
                'ordering': ['-updated_at'],
            },
        ),
    ] 